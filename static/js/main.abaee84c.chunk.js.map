{"version":3,"sources":["assets/images/Billy_STMG.jpg","assets/images/Bob_STMG.jpg","assets/images/Dustin_STMG.jpg","assets/images/Eleven_STMG.jpg","assets/images/Hopper_STMG.jpg","assets/images/Lucas_STMG.jpg","assets/images/Max_STMG.jpg","assets/images/mike_STMG.jpg","assets/images/Murray_STMG.jpg","assets/images/Nancy_STMG.jpeg","assets/images/Steve_STMG.jpg","assets/images/Will_STMG.jpg","components/memoryCard.js","components/cardHolder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MemoryCard","props","imageUrl","clicked","checkIfClicked","id","react_default","a","createElement","className","onClick","src","alt","toString","CardHolder","state","images","points","e","console","log","target","getAttribute","newArray","_this","shuffleArray","setAttribute","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","BillyImage","BobImage","DustinImage","ElevenImage","HopperImage","LucasImage","MaxImage","MikeImage","MurrayImage","NancyImage","SteveImage","WillImage","this","_this2","map","image","components_memoryCard","key","Component","App","href","components_cardHolder","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wRCqBzBC,MAlBf,SAAoBC,GAAO,IACjBC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,QAASC,EAAuBH,EAAvBG,eAAgBC,EAAOJ,EAAPI,GAC3C,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OACEE,QAASN,EACTO,IAAKT,EACLU,IAAI,cACJH,UAAU,eACVN,QAASA,EAAQU,WACjBR,GAAIA,uNCyFCS,6MAtFbC,MAAQ,CACNC,OAAQ,GACRC,OAAQ,KAqBVb,eAAiB,SAAAc,GACfC,QAAQC,IAAIF,EAAEG,OAAOC,aAAa,YAClC,IAEIC,EAFApB,EAAUe,EAAEG,OAAOC,aAAa,WAChCL,EAASO,EAAKT,MAAME,OAExBM,EAAWC,EAAKC,aAAaD,EAAKT,MAAMC,QACxB,UAAZb,GACFc,IACAC,EAAEG,OAAOK,aAAa,UAAW,QACjCF,EAAKG,SAAS,CACZV,OAAQA,EACRD,OAAQO,KAGVC,EAAKG,SAAS,CACZV,OAAQ,EACRD,OAAQO,OAKdE,aAAe,SAAAG,GAKb,IAJA,IACIC,EAAgBC,EADhBC,EAAeH,EAAMI,OAIlB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,sFArDP,IAAMZ,EAAS,CACb,CAAEL,IAAKyB,IAAYjC,SAAS,EAAOE,GAAI,KACvC,CAAEM,IAAK0B,IAAUlC,SAAS,EAAOE,GAAI,KACrC,CAAEM,IAAK2B,IAAanC,SAAS,EAAOE,GAAI,KACxC,CAAEM,IAAK4B,IAAapC,SAAS,EAAOE,GAAI,KACxC,CAAEM,IAAK6B,IAAarC,SAAS,EAAOE,GAAI,KACxC,CAAEM,IAAK8B,IAAYtC,SAAS,EAAOE,GAAI,KACvC,CAAEM,IAAK+B,IAAUvC,SAAS,EAAOE,GAAI,KACrC,CAAEM,IAAKgC,IAAWxC,SAAS,EAAOE,GAAI,KACtC,CAAEM,IAAKiC,IAAazC,SAAS,EAAOE,GAAI,KACxC,CAAEM,IAAKkC,IAAY1C,SAAS,EAAOE,GAAI,MACvC,CAAEM,IAAKmC,IAAY3C,SAAS,EAAOE,GAAI,MACvC,CAAEM,IAAKoC,IAAW5C,SAAS,EAAOE,GAAI,OAExC2C,KAAKrB,SAAS,CAAEX,OAAQA,qCA0CjB,IAAAiC,EAAAD,KACP,OACE1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kFAGAF,EAAAC,EAAAC,cAAA,oBAAYwC,KAAKjC,MAAME,OAAOJ,WAA9B,wBAEAP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZuC,KAAKjC,MAAMC,OAAOkC,IAAI,SAAAC,GAAK,OAC1B7C,EAAAC,EAAAC,cAAC4C,EAAD,CACElD,SAAUiD,EAAMxC,IAChBR,QAASgD,EAAMhD,QACfC,eAAgB6C,EAAK7C,eACrBiD,IAAKF,EAAM9C,GACXA,GAAI8C,EAAM9C,gBA9ECiD,aCSVC,MArBf,WACE,OACEjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BAAd,eACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAW+C,KAAK,KAA7B,kBAORlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACfH,EAAAC,EAAAC,cAACiD,EAAD,QCRcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1D,EAAAC,EAAAC,cAACyD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.abaee84c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Billy_STMG.034e3991.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bob_STMG.54c358ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Dustin_STMG.af6763bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Eleven_STMG.6233163d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Hopper_STMG.f5b3935a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Lucas_STMG.d78aa73b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Max_STMG.9c90df22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mike_STMG.e46319a2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Murray_STMG.a1c71978.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Nancy_STMG.44bc92b0.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Steve_STMG.09348980.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Will_STMG.459ec91a.jpg\";","import React from \"react\";\r\nimport \"./memoryCard.css\";\r\n\r\nfunction MemoryCard(props) {\r\n  const { imageUrl, clicked, checkIfClicked, id } = props;\r\n  return (\r\n    <div className=\"card mx-1\">\r\n      <div className=\"card-body\">\r\n        <img\r\n          onClick={checkIfClicked}\r\n          src={imageUrl}\r\n          alt=\"memory card\"\r\n          className=\"card-img-top\"\r\n          clicked={clicked.toString()}\r\n          id={id}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryCard;\r\n","import React, { Component } from \"react\";\r\nimport MemoryCard from \"./memoryCard\";\r\nimport \"./cardHolder.css\";\r\nimport BillyImage from \"../assets/images/Billy_STMG.jpg\"; //\"https://images2.minutemediacdn.com/image/upload/c_crop,h_1076,w_1916,x_133,y_0/f_auto,q_auto,w_1100/v1553289783/shape/mentalfloss/577785-netflix.jpg\"\r\nimport BobImage from \"../assets/images/Bob_STMG.jpg\"; //\"https://media1.popsugar-assets.com/files/thumbor/-C2xy7eesrnZTCz7Qppnas6YZgg/fit-in/2048xorig/filters:format_auto-!!-:strip_icc-!!-/2017/10/31/845/n/1922283/af4abe9e59f8cc637ace57.04537866_edit_img_image_17268548_1509477153/i/Reactions-Bob-Stranger-Things-Season-2.jpg\"\r\nimport DustinImage from \"../assets/images/Dustin_STMG.jpg\"; //\"https://thefederalist.com/wp-content/uploads/2016/08/dustin.jpg\"\r\nimport ElevenImage from \"../assets/images/Eleven_STMG.jpg\"; //\"https://i.kinja-img.com/gawker-media/image/upload/s--sYb9O5vT--/c_scale,f_auto,fl_progressive,q_80,w_800/zdmdbibfppxbfqbmtc0p.png\"\r\nimport HopperImage from \"../assets/images/Hopper_STMG.jpg\"; //\"https://costumewall.com/wp-content/uploads/2016/10/jim-hopper.jpg\"\r\nimport LucasImage from \"../assets/images/Lucas_STMG.jpg\"; //\"https://imgix.bustle.com/uploads/image/2019/7/13/568e1730-eca0-49d1-8db1-91ee0bff3f4e-nerd-league-lucas.jpg\"\r\nimport MaxImage from \"../assets/images/Max_STMG.jpg\"; //\"https://www.thewrap.com/wp-content/uploads/2017/10/stranger-things-max-sadie-sink.jpg\"\r\nimport MikeImage from \"../assets/images/mike_STMG.jpg\"; //\"https://ewedit.files.wordpress.com/2017/10/st21.jpg\"\r\nimport MurrayImage from \"../assets/images/Murray_STMG.jpg\"; //\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRtANRx_senA2SMnoJtSqQbfsLHYZ8jXufo-tgYPGh757INjj245Q\"\r\nimport NancyImage from \"../assets/images/Nancy_STMG.jpeg\"; //\"https://assets.popbuzz.com/2017/45/nancy-stranger-things--1509979319-view-1.jpeg\"\r\nimport SteveImage from \"../assets/images/Steve_STMG.jpg\"; //\"https://vignette.wikia.nocookie.net/p__/images/a/a3/Steve-1.jpg/revision/latest?cb=20180207154629&path-prefix=protagonist\"\r\nimport WillImage from \"../assets/images/Will_STMG.jpg\"; //\"https://nypdecider.files.wordpress.com/2019/07/stranger-things-3-will-wise.jpg?quality=90\"\r\n\r\nclass CardHolder extends Component {\r\n  state = {\r\n    images: [],\r\n    points: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    const images = [\r\n      { src: BillyImage, clicked: false, id: \"1\" },\r\n      { src: BobImage, clicked: false, id: \"2\" },\r\n      { src: DustinImage, clicked: false, id: \"3\" },\r\n      { src: ElevenImage, clicked: false, id: \"4\" },\r\n      { src: HopperImage, clicked: false, id: \"5\" },\r\n      { src: LucasImage, clicked: false, id: \"6\" },\r\n      { src: MaxImage, clicked: false, id: \"7\" },\r\n      { src: MikeImage, clicked: false, id: \"8\" },\r\n      { src: MurrayImage, clicked: false, id: \"9\" },\r\n      { src: NancyImage, clicked: false, id: \"10\" },\r\n      { src: SteveImage, clicked: false, id: \"11\" },\r\n      { src: WillImage, clicked: false, id: \"12\" }\r\n    ];\r\n    this.setState({ images: images });\r\n  }\r\n  // when a card is clicked run this function to check if it's been clicked before\r\n  checkIfClicked = e => {\r\n    console.log(e.target.getAttribute(\"clicked\"));\r\n    let clicked = e.target.getAttribute(\"clicked\");\r\n    let points = this.state.points;\r\n    let newArray = [];\r\n    newArray = this.shuffleArray(this.state.images);\r\n    if (clicked === \"false\") {\r\n      points++;\r\n      e.target.setAttribute(\"clicked\", \"true\");\r\n      this.setState({\r\n        points: points,\r\n        images: newArray\r\n      });\r\n    } else {\r\n      this.setState({\r\n        points: 0,\r\n        images: newArray\r\n      });\r\n    }\r\n  };\r\n  // after a card click and the click check has happened, run this to move the images around\r\n  shuffleArray = array => {\r\n    var currentIndex = array.length;\r\n    var temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>\r\n          Click all the Stranger Things characters without clicking one twice!\r\n        </h4>\r\n        <h3>Score: {this.state.points.toString()} | Best Possible: 12</h3>\r\n        {/*add margin bottom */}\r\n        <div className=\"container\">\r\n          {this.state.images.map(image => (\r\n            <MemoryCard\r\n              imageUrl={image.src}\r\n              clicked={image.clicked}\r\n              checkIfClicked={this.checkIfClicked}\r\n              key={image.id}\r\n              id={image.id}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardHolder;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport CardHolder from \"./components/cardHolder\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-light bg-dark\">\n        <div className=\"container\">\n          <h1 className=\"navbar-brand text-primary\">Memory Game</h1>\n          <ul className=\"nav\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                Difficulty\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      <div className=\"container-flex mt-5 mb-5\" />\n      <CardHolder />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}